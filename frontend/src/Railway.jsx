import React, { useState } from "react";
import jsPDF from "jspdf";
import stamp from "./assets/stamp.png"; // Import your stamp image
import sign from "./assets/sign.jpg"; // Import your signature image

function Railway() {
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    address: "",
    branch: "",
    year: "",
    toStation: "",
    fromStation: "",
    dob: "",
  });

  const [dateOption, setDateOption] = useState("1 month");
  const [uploadedImage, setUploadedImage] = useState(null);

  // Handle input changes
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  // Handle image upload
  const handleImageUpload = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => setUploadedImage(reader.result);
      reader.readAsDataURL(file);
    }
  };

  // Calculate dates
  const getCurrentDate = () => new Date().toLocaleDateString("en-GB");
  const getFromDate = () => {
    const monthsToAdd = dateOption === "1 month" ? 1 : 3;
    const futureDate = new Date();
    futureDate.setMonth(futureDate.getMonth() + monthsToAdd);
    return futureDate.toLocaleDateString("en-GB");
  };

  // Generate PDF
  const generatePDF = () => {
    const pdf = new jsPDF();

    // Add Title with Background
    pdf.setFillColor(230, 230, 250); // Light lavender background
    pdf.rect(10, 10, 190, 20, "F"); // Draw filled rectangle
    pdf.setFontSize(18);
    pdf.setTextColor(0, 0, 128); // Navy blue text
    pdf.text("Railway Concession Slip", 105, 25, { align: "center" });

    // Add Uploaded ID Image (Centered)
    if (uploadedImage) {
      const imageWidth = 80; // Width of the image in mm
      const imageHeight = 50; // Height of the image in mm
      const pageWidth = 210; // A4 page width in mm
      const xPosition = (pageWidth - imageWidth) / 2; // Center the image horizontally
      pdf.setFontSize(12);
      pdf.text("ID Card:", 105, 40, { align: "center" });
      pdf.addImage(uploadedImage, "PNG", xPosition, 45, imageWidth, imageHeight); // Centered ID card image
    }

    // Draw Table Header with Background
    pdf.setFillColor(200, 200, 200); // Light gray background
    pdf.rect(10, 100, 190, 10, "F"); // Header background
    pdf.setFontSize(12);
    pdf.setTextColor(0, 0, 0); // Black text
    pdf.text("Field", 20, 107);
    pdf.text("Value", 100, 107);
    pdf.line(10, 110, 200, 110); // Horizontal line below header

    // Table Data
    const tableData = [
      ["Name", formData.name],
      ["Phone", formData.phone],
      ["Address", formData.address],
      ["Branch", formData.branch],
      ["Year", formData.year],
      ["From Station", formData.fromStation],
      ["To Station", formData.toStation],
      ["Date of Birth", formData.dob],
      ["Concession Duration", dateOption],
      ["Issue Date", getCurrentDate()],
      ["Valid Till", getFromDate()],
    ];

    // Populate Table Rows with Borders
    let y = 115; // Starting Y position for table rows
    tableData.forEach(([field, value]) => {
      pdf.text(field, 20, y);
      pdf.text(value || "N/A", 100, y);
      pdf.line(10, y + 2, 200, y + 2); // Horizontal line after each row
      y += 10; // Move to the next row
    });

    // Add Signature and Stamp (Aligned in a Single Row)
    pdf.setFontSize(12);
    pdf.text("Signature:", 20, y + 20);
    pdf.addImage(sign, "JPG", 20, y + 25, 50, 20); // Signature image

    pdf.text("Stamp:", 140, y + 20);
    pdf.addImage(stamp, "PNG", 140, y + 25, 30, 30); // Stamp image

    // Add Footer
    pdf.setFontSize(10);
    pdf.setTextColor(128, 128, 128); // Gray text
    pdf.text("Generated by Railway Concession System", 105, 280, { align: "center" });

    // Save PDF
    pdf.save("RailwaySlip.pdf");
  };

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col items-center py-10">
      {/* Header */}
      <h1 className="text-3xl font-bold text-gray-800 mb-6">Railway Concession</h1>

      {/* Form Section */}
      <div className="bg-white shadow-lg rounded-lg p-6 w-11/12 md:w-2/3 lg:w-1/2">
        <form className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {[
            { name: "name", placeholder: "Enter your name" },
            { name: "phone", placeholder: "Enter your phone number", type: "tel" },
            { name: "address", placeholder: "Enter your address" },
            { name: "branch", placeholder: "Enter your branch" },
            { name: "year", placeholder: "Enter your year" },
            { name: "toStation", placeholder: "To (Station Name)" },
            { name: "fromStation", placeholder: "From (Station Name)" },
          ].map((input) => (
            <div key={input.name}>
              <label className="block text-sm font-medium text-gray-700">
                {input.placeholder}
              </label>
              <input
                type={input.type || "text"}
                name={input.name}
                placeholder={input.placeholder}
                value={formData[input.name]}
                onChange={handleInputChange}
                className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500"
              />
            </div>
          ))}

          {/* Date of Birth Input */}
          <div>
            <label className="block text-sm font-medium text-gray-700">Date of Birth</label>
            <input
              type="date"
              name="dob"
              value={formData.dob}
              onChange={handleInputChange}
              className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500"
            />
          </div>

          {/* Duration Option */}
          <div>
            <label className="block text-sm font-medium text-gray-700">Concession Duration</label>
            <select
              value={dateOption}
              onChange={(e) => setDateOption(e.target.value)}
              className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500"
            >
              <option value="1 month">1 Month</option>
              <option value="3 months">3 Months</option>
            </select>
          </div>

          {/* Image Upload */}
          <div>
            <label className="block text-sm font-medium text-gray-700">Upload ID Photo</label>
            <input
              type="file"
              accept="image/*"
              onChange={handleImageUpload}
              className="w-full p-3 border rounded-lg"
            />
          </div>
        </form>
      </div>

      {/* Generate PDF Button */}
      <button
        onClick={generatePDF}
        className="mt-6 bg-orange-400 text-white py-2 px-6 rounded-lg shadow-md hover:bg-orange-500"
      >
        Generate concession
      </button>
    </div>
  );
}

export default Railway;